{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AdirSinai\\\\Desktop\\\\lumen-project\\\\client\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport moment from \"moment\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [newData, setNewData] = useState([{\n    date: [],\n    subs: [],\n    changeMonth: [],\n    changeYear: []\n  }]);\n  useEffect(() => {\n    fetch(\"/api\").then(response => response.json()).then(data => {\n      let date = data.data.map(d => d.date);\n      let subs = data.data.map(e => e.new_subscriptions);\n      let newMonth = [0];\n      let newYear = [0];\n\n      for (var i = 0; i < subs.length - 1; i++) {\n        const month = subs[i + 1] * 100 / subs[i] - 100;\n        newMonth.push(+month.toFixed(2));\n        const years = subs[i + 12] * 100 / subs[i] - 100;\n        newYear.push(+years.toFixed(2) || 0);\n      }\n\n      setNewData([{\n        date: date,\n        subs: subs,\n        changeMonth: newMonth,\n        changeYear: newYear\n      }]);\n    });\n  }, []);\n\n  const Row = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"fff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: newData.map((data, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), data.date.map(d => ({\n              /* <td>{moment(d).format(\"MMM YYYY\")}</td> */\n            }))]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"New Subscriptions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), data.subs.map(sub => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sub\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Change from last month(%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), data.changeMonth.map(m => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: m + \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"Change from last year (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), data.changeYear.map(y => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: y + \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2cf2T0pOyB9QUVibDciDfw4LlJE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","moment","useEffect","useState","App","newData","setNewData","date","subs","changeMonth","changeYear","fetch","then","response","json","data","map","d","e","new_subscriptions","newMonth","newYear","i","length","month","push","toFixed","years","Row","sub","m","y"],"sources":["C:/Users/AdirSinai/Desktop/lumen-project/client/src/components/App.jsx"],"sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst App = () => {\r\n  const [newData, setNewData] = useState([\r\n    { date: [], subs: [], changeMonth: [], changeYear: [] },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let date = data.data.map((d) => d.date);\r\n        let subs = data.data.map((e) => e.new_subscriptions);\r\n\r\n        let newMonth = [0];\r\n        let newYear = [0];\r\n        for (var i = 0; i < subs.length - 1; i++) {\r\n          const month = (subs[i + 1] * 100) / subs[i] - 100;\r\n          newMonth.push(+month.toFixed(2));\r\n          const years = (subs[i + 12] * 100) / subs[i] - 100;\r\n          newYear.push(+years.toFixed(2) || 0);\r\n        }\r\n\r\n        setNewData([\r\n          {\r\n            date: date,\r\n            subs: subs,\r\n            changeMonth: newMonth,\r\n            changeYear: newYear,\r\n          },\r\n        ]);\r\n      });\r\n  }, []);\r\n\r\n  const Row = ()=>{\r\n    return <p>fff</p>\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <table>\r\n        <tbody>\r\n          {newData.map((data, i) => (\r\n            <>\r\n              <tr key={i}>\r\n                <th scope=\"row\">Month</th>\r\n                {data.date.map((d) => (\r\n                  {/* <td>{moment(d).format(\"MMM YYYY\")}</td> */}\r\n                  \r\n                ))}\r\n              </tr>\r\n\r\n              <tr>\r\n                <th scope=\"row\">New Subscriptions</th>\r\n                {data.subs.map((sub) => (\r\n                  <td>{sub}</td>\r\n                ))}\r\n              </tr>\r\n\r\n              <tr>\r\n                <th scope=\"row\">Change from last month(%)</th>\r\n                {data.changeMonth.map((m) => (\r\n                  <td>{m + \"%\"}</td>\r\n                ))}\r\n              </tr>\r\n\r\n              <tr>\r\n                <th scope=\"row\">Change from last year (%)</th>\r\n                {data.changeYear.map((y) => (\r\n                  <td>{y + \"%\"}</td>\r\n                ))}\r\n              </tr>\r\n            </>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}